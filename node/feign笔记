概述：单词feign[fein] 假装，捏造，装作
feign是一个声明式webservice客户端 ,使得编写web服务客户端变得非常容易
只需要创建一个接口，然后在上面添加注解即可
	feign是一个声明式webservice客户端，使用feign能让编写web service 客户端更加简单，它的使用方法是定义一个接口，
	然后在上面添加注解，同时也支持JAX-RS标准的注解。feign也支持可插拔式的编码器和解码器。spring cloud 对feign进行了
	封装，使其支持spring MVC 标准注解和Http MessageConverters。 feign可以与eureka和ribbon组合使用以支持负载均衡。
来源：
	之前大家用ribbon运行负载均衡，功能和强大，甚至可以自己定义算法
	feign是怎么出来的？
	
	1、大部分的大家都可以介绍，直接调用我们的微服务来进行访问。
	
		//private static final String REST_URL_PREFIX = "http://localhost:8001";
		
		修改为
		
		private static final String REST_URL_PREFIX = "http://MICROSERVICECLOUD-DEPT";
	2、大家目前都习惯面向接口编程，比如webservice接口，比如dao接口，这个已经是大家的规范
		2.1微服务名字获得调用地址
		
		2.2就是通过接口+注解，获得我们的调用服务
		
		适应社区其他程序员提出的，还是统一的面向接口编程的策略。 ---feign
 	
作用：
	Feign旨在使 编写Java http客户端变得容易。
	前面在使用ribbon+restTemplate时，利用restTemplate对http请求的封装处理，形成了
	一套模板化的调用方法。但是在实际开发中，由于对服务以来的调用可能不止一处，往往一个接口会
	被多处调用，所以通常都会针对每个服务自行封装一些客户端类来包装这些依赖服务的调用。所以feign
	在此基础上做了进一步封装，由他来帮助我们定义和实现依赖服务接口的定义。在feign的实现下
	我们只需创建一个接口并使用注解方式来配置它。（以前是dao接口上面注mapper注解，现在是一个服务
	接口上面标注一个feign注解即可），即可完成对服务提供方的接口绑定，简化了使用spring cloud ribbon
	时，自动封装服务调用客户端的开发量。
	官方资料： 
	https://github.com/OpenFeign/feign/ 	

Feign集成了ribbon
	利用ribbon维护了microservicecloud-dept的服务列表信息，并且通过轮询实现了客户端的负载就能，而在ribbon不同
	的是，通过feign只需要定义服务绑定接口且以声明式的方法，优雅而简单的实现了服务调用。
















			